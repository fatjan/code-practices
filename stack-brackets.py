def isBalanced(s):
    opener = '{[('
    o_list = []
    # closer =
    for i in range(len(s)):
        if s[i] in opener:
            o_list.append(s[i])
        else:
            if checkCouple(o_list[-1], s[i]):
                o_list.pop()
            else:
                return 'NO'
    return 'YES'


def checkCouple(a, b):
    if a == '{' and b == '}':
        return True
    elif a == '[' and b == ']':
        return True
    elif a == '(' and b == ')':
        return True
    return False

# print(isBalanced('{(([])[])[]}'))
# print(isBalanced('{(([])[])[]]}'))
# print(isBalanced('{(([])[])[]}[]'))


print(isBalanced(
    '{(([])[])[]}[]{{{{{{{{{{{{{{{{{[[[[[[[[[[[[[[((((((((((((()))))))))))))]]]]]]]]]]]]]]}}}}}}}}}}}}}}}}}{{{{[[[[[((((()))))]]]]]}}}}{{{{{{{[[[[[[[(((((())))))]]]]]]]}}}}}}}'))
print(isBalanced(
    '{(([])[])[]}[]{{{{{{{{{{{{{{{{{[[[[[[[[[[[[[[((((((((((((()))))))))))))]]]]]]]]]]]]]]}}}}}}}}}}}}}}}}}{{{{[[[[[((((()))))]]]]]}}}}'))
print(isBalanced(
    '{(([])[])[]}[]{{{{{{{{{{{{{{{{{[[[[[[[[[[[[[[((((((((((((()))))))))))))]]]]]]]]]]]]]]}}}}}}}}}}}}}}}}}{{{{[[[[[((((()))))]]]]]}}}}'))
print(isBalanced(
    '{(([])[])[]}[]{{{{{{{{{{{{{{{{{[[[[[[[[[[[[[[((((((((((((()))))))))))))]]]]]]]]]]]]]]}}}}}}}}}}}}}}}}}{{{{[[[[[((((()))))]]]]]}}}}{{{{{{{[[[[[[[(((((())))))]]]]]]]}}}}}}}'))
print(isBalanced(
    '{(([])[])[]}[]{{{{{{{{{{{{{{{{{[[[[[[[[[[[[[[((((((((((((()))))))))))))]]]]]]]]]]]]]]}}}}}}}}}}}}}}}}}{{{{[[[[[((((()))))]]]]]}}}}{{{{{{{[[[[[[[(((((())))))]]]]]]]}}}}}}}'))
print(isBalanced(
    '{(([])[])[]}[]{{{{{{{{{{{{{{{{{[[[[[[[[[[[[[[((((((((((((()))))))))))))]]]]]]]]]]]]]]}}}}}}}}}}}}}}}}}{{{{[[[[[((((()))))]]]]]}}}}{{{{{{{[[[[[[[(((((())))))]]]]]]]}}}}}}}'))
